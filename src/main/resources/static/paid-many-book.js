const API_BASE = window.location.origin;
const accessToken = localStorage.getItem("accessToken");

// --- S√°ch th∆∞·ªùng xuy√™n mua ---
async function fetchPaidManyBooks() {
    try {
        const response = await fetch(`${API_BASE}/book/paid-many`, {
            headers: { "Authorization": `Bearer ${accessToken}` }
        });

        const result = await response.json();

        if (result.success) {
            showBooks(result.data, "paidManyBooks");
        } else {
            alert("Kh√¥ng th·ªÉ l·∫•y danh s√°ch s√°ch th∆∞·ªùng mua: " + result.message);
        }
    } catch (error) {
        console.error("L·ªói khi l·∫•y s√°ch th∆∞·ªùng mua:", error);
        alert("C√≥ l·ªói x·∫£y ra khi t·∫£i danh s√°ch!");
    }
}

// --- S√°ch ng·∫´u nhi√™n c√≥ ph√¢n trang ---
let randomBooksPage = 0;
const randomBooksSize = 5;
let randomBooksTotalPages = 1;
let isLoadingRandomBooks = false;

async function fetchRandomBooks(page = 0, size = 5) {
    if (isLoadingRandomBooks || page >= randomBooksTotalPages) return;

    isLoadingRandomBooks = true;

    try {
        const response = await fetch(`${API_BASE}/book/random?page=${page}&size=${size}`, {
            headers: { "Authorization": `Bearer ${accessToken}` }
        });

        const result = await response.json();

        if (result.success) {
            const books = result.data.content; // l·∫•y content t·ª´ Page<BookDTO>
            randomBooksTotalPages = result.data.totalPages;
            showBooks(books, "random-book", true);
            randomBooksPage++;
        } else {
            alert("Kh√¥ng th·ªÉ l·∫•y s√°ch ng·∫´u nhi√™n: " + result.message);
        }
    } catch (error) {
        console.error("L·ªói khi l·∫•y s√°ch ng·∫´u nhi√™n:", error);
        alert("C√≥ l·ªói x·∫£y ra khi t·∫£i s√°ch ng·∫´u nhi√™n!");
    } finally {
        isLoadingRandomBooks = false;
    }
}

// --- Hi·ªÉn th·ªã s√°ch (d√πng chung cho c·∫£ 2 lo·∫°i) ---
// append = true ‚Üí th√™m v√†o container thay v√¨ x√≥a ƒëi
function showBooks(books, containerId, append = false) {
    const container = document.getElementById(containerId);
    if (!append) container.innerHTML = "";

    if (!books || books.length === 0) {
        if (!append) container.innerHTML = "<p>Ch∆∞a c√≥ s√°ch n√†o.</p>";
        return;
    }

    books.forEach(book => {
        const card = document.createElement("div");
        card.classList.add("book-card");

        const price = Number(book.price).toLocaleString("vi-VN");
        const salePrice = book.salePrice ? Number(book.salePrice).toLocaleString("vi-VN") : null;

        card.innerHTML = `
            <img src="${book.imgUrl || '/default-book.png'}" alt="${book.title}">
            <div class="book-title">${book.title}</div>
            <div>
                <span class="book-price">${salePrice ? salePrice : price} ‚Ç´</span>
                ${salePrice ? `<span class="book-sale">${price} ‚Ç´</span>` : ""}
            </div>
            <button class="add-cart-btn">üõí Th√™m v√†o gi·ªè h√†ng</button>
        `;

        const idToAdd = book.bookId ?? book.id;

        card.querySelector(".add-cart-btn").addEventListener("click", () => {
            addToCart(idToAdd, 1);
        });

        container.appendChild(card);
    });
}

// --- Th√™m v√†o gi·ªè h√†ng ---
async function addToCart(bookId, quantity) {
    try {
        const response = await fetch(`${API_BASE}/cart/items`, {
            method: "POST",
            headers: {
                "Authorization": `Bearer ${accessToken}`,
                "Content-Type": "application/json"
            },
            body: JSON.stringify({ bookId, quantity })
        });

        const result = await response.json();

        if (result.success) {
            alert(result.message || "ƒê√£ th√™m v√†o gi·ªè h√†ng!");
        } else {
            alert("Kh√¥ng th·ªÉ th√™m v√†o gi·ªè: " + result.message);
        }
    } catch (error) {
        console.error("L·ªói khi th√™m v√†o gi·ªè h√†ng:", error);
        alert("C√≥ l·ªói x·∫£y ra khi th√™m v√†o gi·ªè h√†ng!");
    }
}

// --- Load th√™m s√°ch khi cu·ªôn g·∫ßn cu·ªëi trang ---
window.addEventListener("scroll", () => {
    const nearBottom = window.innerHeight + window.scrollY >= document.body.offsetHeight - 200;
    if (nearBottom) fetchRandomBooks(randomBooksPage, randomBooksSize);
});

window.addEventListener("DOMContentLoaded", () => {
    fetchPaidManyBooks();
    fetchRandomBooks(randomBooksPage, randomBooksSize);
});
